{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,wBAC/BG,KAAMJ,SAASC,cAAc,UAG/BH,EAAKM,KAAKC,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAaV,EAAKC,MAAMU,MACxBP,EAAOJ,EAAKI,KAAKO,MACjBN,EAASL,EAAKK,OAAOM,MAG3B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAQO,IAAK,CAC/B,IAAIC,EAAWD,EACfE,QAAQC,IAAIH,GACZ,IAAIX,EAAQe,OAAON,GAAeE,EAAIR,EACtCU,QAAQC,IAAI,QAASd,GAGLgB,EAAcJ,EAAUZ,GAE9BiB,MAAK,CAAEC,EAAUlB,KACvBmB,EAAAtB,GAASuB,OAAOC,QAAQ,uBAAqBH,QAE5CI,OAAM,CAAEJ,EAAUlB,KACnBmB,EAAAtB,GAASuB,OAAOG,QAAQ,sBAAoBL,QAMpD,SAASF,EAAcE,EAAUlB,GAE/B,OAAO,IAAIwB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCX,GAAY,EACZY,YAAW,KACLH,EACFF,EAAQ,GAAGP,QAAelB,OAE1B0B,EAAO,GAAGR,QAAelB,SAE3BA","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nconst refs = {\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form')\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const delayFirst = refs.delay.value;\n  const step = refs.step.value;\n  const amount = refs.amount.value;\n  // console.log(delayFirst, step, amount);\n\n  for (let i = 0; i < amount; i++) {\n    let position = i;\n    console.log(i);\n    let delay = Number(delayFirst) + (i * step);\n    console.log(\"delay\", delay);\n\n\n    const promise = createPromise(position, delay);\n      // position += 1;\n      promise.then(( position, delay ) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position}`);\n        \n      }).catch(( position, delay ) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position}`);\n        \n    })\n  }\n  \n\nfunction createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    position += 1;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`${position} in ${delay}ms`);\n    } else {\n        reject(`${position} in ${delay}ms`);\n    }\n    },delay)\n  })\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","form","addEventListener","event","preventDefault","delayFirst","value","i","position1","console","log","Number","createPromise","then","position","$parcel$interopDefault","Notify","success","catch","failure","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.0394cd6d.js.map"}